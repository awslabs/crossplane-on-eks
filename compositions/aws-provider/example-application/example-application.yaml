# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: example.app.awsblueprints.io
  labels:
    awsblueprints.io/environment: dev
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: XExampleApp
  patchSets:
    - name: common-fields
      patches:
        - fromFieldPath: spec.resourceConfig
          toFieldPath: spec.resourceConfig
          policy:
            mergeOptions:
              keepMapValues: true
  resources:
    - name: dynamodb-table
      connectionDetails:
        - name: tableName
          fromConnectionSecretKey: tableName
        - name: tableArn
          fromConnectionSecretKey: tableArn
        - name: region
          fromConnectionSecretKey: region
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: XDynamoDBTable
        spec:
          compositionSelector:
            matchLabels:
              awsblueprints.io/provider: aws
              awsblueprints.io/environment: dev
              dynamodb.awsblueprints.io/capacity: on-demand
              dynamodb.awsblueprints.io/pkType: partition
          tableIndex:
            hashKeyName: hashKey
            hashKeyType: S
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: ToCompositeFieldPath
          fromFieldPath: status.tableARN
          toFieldPath: status.tableArn
        - type: ToCompositeFieldPath
          fromFieldPath: spec.tableSpec.hashKeyName
          toFieldPath: spec.tableIndex.hashKeyName
        - type: ToCompositeFieldPath
          fromFieldPath: spec.tableSpec.hashKeyType
          toFieldPath: spec.tableIndex.hashKeyType
        - type: ToCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: status.xDynamoDBTableObjectName
    - name: read-policy
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: XIAMPolicy
        spec:
          compositionSelector:
            matchLabels:
              awsblueprints.io/provider: aws
              awsblueprints.io/environment: dev
              iam.awsblueprints.io/policy-type: read
              iam.awsblueprints.io/service: dynamodb-table
          resourceArn: ""
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: ToCompositeFieldPath
          fromFieldPath: status.policyArn
          toFieldPath: status.readPolicyArn
        - fromFieldPath: status.tableArn
          toFieldPath: spec.resourceArn
    - name: write-policy
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: XIAMPolicy
        spec:
          compositionSelector:
            matchLabels:
              awsblueprints.io/provider: aws
              awsblueprints.io/environment: dev
              iam.awsblueprints.io/policy-type: write
              iam.awsblueprints.io/service: dynamodb-table
          resourceArn: ""
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: ToCompositeFieldPath
          fromFieldPath: status.policyArn
          toFieldPath: status.writePolicyArn
        - fromFieldPath: status.tableArn
          toFieldPath: spec.resourceArn
    - name: irsa
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: XIRSA
        spec:
          compositionRef:
            name: irsa-exact.awsblueprints.io
          awsAccountID: ""
          eksOIDC: ""
          permissionsBoundaryArn: ""
          policyArns:
            - ""
            - ""
          serviceAccountName: "example-app"
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.accountId
          toFieldPath: spec.awsAccountID
        - type: FromCompositeFieldPath
          fromFieldPath: spec.eksOIDC
          toFieldPath: spec.eksOIDC
        - type: FromCompositeFieldPath
          fromFieldPath: spec.permissionsBoundaryArn
          toFieldPath: spec.permissionsBoundaryArn
        - fromFieldPath: status.readPolicyArn
          toFieldPath: spec.policyArns[0]
        - fromFieldPath: status.writePolicyArn
          toFieldPath: spec.policyArns[1]
        - type: ToCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: status.xirsaObjectName
    - name: example-app
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          # Not strictly required but is here as an example.
          references:
            - dependsOn:
                apiVersion: awsblueprints.io/v1alpha1
                kind: XIRSA
            - dependsOn:
                apiVersion: awsblueprints.io/v1alpha1
                kind: XDynamoDBTable
          forProvider:
            manifest:
              apiVersion: apps/v1
              kind: Deployment
              metadata:
                name: example-app
                namespace: ""
                labels:
                  app: dynamodb-table-test
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: dynamodb-table-test
                template:
                  metadata:
                    labels:
                      app: dynamodb-table-test
                  spec:
                    serviceAccountName: example-app
                    containers:
                    - name: aws-cli
                      image: amazon/aws-cli:latest
                      env:
                        - name: AWS_DEFAULT_REGION
                          valueFrom:
                            secretKeyRef:
                              name: example-application-secrets
                              key: region
                        - name: TABLE_NAME
                          valueFrom:
                            secretKeyRef:
                              name: example-application-secrets
                              key: tableName
                        - name: TEST_KEY
                          value: '{"hashKey": {"S":"test1"}}'
                      command:
                        - "/bin/bash"
                      args:
                        - "-c"
                        - 'while true; do echo "putting item"; aws dynamodb put-item --table-name $TABLE_NAME  --item "$TEST_KEY" || exit 10; sleep 120; echo "removing item"; aws dynamodb delete-item --table-name $TABLE_NAME --key "$TEST_KEY"; sleep 120 ; done'
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.labels[crossplane.io/claim-namespace]
          toFieldPath: spec.forProvider.manifest.metadata.namespace
        - type: FromCompositeFieldPath
          fromFieldPath: status.xirsaObjectName
          toFieldPath: spec.references[0].dependsOn.name
        - type: FromCompositeFieldPath
          fromFieldPath: status.xDynamoDBTableObjectName
          toFieldPath: spec.references[1].dependsOn.name
