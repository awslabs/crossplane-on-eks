
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: subscriptionfilter.cloudwatchlogs.upbound.awsblueprints.io
  annotations:
    argocd.argoproj.io/sync-wave: "-10"
  labels:
    awsblueprints.io/provider: aws
    awsblueprints.io/environment: dev
    cloudwatchlogs.awsblueprints.io/service: cloudwatch
    cloudwatchlogs.awsblueprints.io/logs: subscriptionfilter
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: XSubscriptionFilter
  patchSets:
    - name: common-fields-composition
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig
          toFieldPath: spec.resourceConfig
    - name: common-fields
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.tags
          toFieldPath: spec.forProvider.tags
          policy:
            mergeOptions:
              appendSlice: true
        - fromFieldPath: "metadata.name"
          toFieldPath: "metadata.name"
  resources:
    - name: subscriptionfilter
      base:
        apiVersion: cloudwatchlogs.aws.upbound.io/v1beta1
        kind: SubscriptionFilter
        spec:
          forProvider: {}
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: PatchSet
          patchSetName: common-fields-composition
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-subscriptionfilter"
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.name
          transforms:
            - type: string
              string:
                fmt: "%s-subscriptionfilter"
        - type: FromCompositeFieldPath
          fromFieldPath: spec.destinationArnRef
          toFieldPath: spec.forProvider.destinationArnRef
        - type: FromCompositeFieldPath
          fromFieldPath: spec.destinationArnSelector
          toFieldPath: spec.forProvider.destinationArnSelector
        - type: FromCompositeFieldPath
          fromFieldPath: spec.distribution
          toFieldPath: spec.forProvider.distribution
        - type: FromCompositeFieldPath
          fromFieldPath: spec.filterPattern
          toFieldPath: spec.forProvider.filterPattern
        - type: FromCompositeFieldPath
          fromFieldPath: spec.logGroupName
          toFieldPath: spec.forProvider.logGroupName
        - type: FromCompositeFieldPath
          fromFieldPath: spec.roleArn
          toFieldPath: spec.forProvider.roleArn
        - type: FromCompositeFieldPath
          fromFieldPath: spec.roleArnRef
          toFieldPath: spec.forProvider.roleArnRef
        - type: FromCompositeFieldPath
          fromFieldPath: spec.roleArnSelector
          toFieldPath: spec.forProvider.roleArnSelector
